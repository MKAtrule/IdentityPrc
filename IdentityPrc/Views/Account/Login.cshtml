@model IdentityPrc.ViewModel.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>

<br />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" name="ReturnUrl" value="@ViewBag.ReturnUrl" />
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <h1>External Login</h1>
    <hr />
    @{
        if (Model.ExternalLogins?.Count == 0)
        {
            <div>No external logins configured</div>
        }
        else
        {
            <form method="post" asp-action="ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl">
                <div>
                    @foreach (var provider in Model.ExternalLogins)
                    {
                        <button type="submit" class="btn btn-primary"
                                name="provider" value="@provider.Name"
                                title="Log in using your @provider.DisplayName account">
                            @provider.DisplayName
                        </button>
                    }
                </div>
            </form>
        }
    }
</div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
